-- CSCI 435 - PROJECT
-- Group Members:  Tony Gong, Dale Winston, Mohammed Uddin


--DROP TABLE DAYS_OFF;
--DROP TABLE BENEFITS;
--DROP TABLE HAS_DAYS_OFF;
--DROP TABLE HAS_BENEFITS;
--DROP TABLE EMPL_WORKS_ON_PROJ;
--DROP TABLE PROJECT_OF_DEPT;
--DROP TABLE DEPARTMENT;
--DROP TABLE PROJECT;
--DROP TABLE HAS_TITLE;
--DROP TABLE TITLE;
--DROP TABLE SUPERVISES;
--DROP TABLE INTERN;
--DROP TABLE WAGE;
--DROP TABLE SALARY;
--DROP TABLE EMPLOYEE;


CREATE TABLE EMPLOYEE(
	EMPL_ID    NUMBER(5) PRIMARY KEY NOT NULL,
	SSN	   		 NUMBER(9) NOT NULL,
  FNAME      VARCHAR2(15) NOT NULL,
  LNAME      VARCHAR2(15) NOT NULL,
	DOB        DATE NOT NULL,
	SEX        CHAR NOT NULL,
	ADDRESS    VARCHAR(30),
	EMAIL      VARCHAR(30),
	DNUMBER    NUMBER(5),
	START_DATE  DATE DEFAULT(sysdate),
	PHONE       VARCHAR2(12)
);
--	COMMENTS
-- 	DECIMAL(SIZE, D):
--	Number value with a maximum number of digits of "size" total,
--	with a maximum number of "d" digits to the right of the decimal.

--DESC EMPLOYEE



CREATE TABLE SALARY(
	SALARY     DECIMAL(10,2) NOT NULL,
	EMPL_ID    NUMBER(5) NOT NULL,
	CONSTRAINT EMPLOYEE_FK FOREIGN KEY (EMPL_ID) REFERENCES EMPLOYEE(EMPL_ID),
	PRIMARY KEY(EMPL_ID)
);
--DESC SALARY



CREATE TABLE WAGE(
	WAGE        DECIMAL(10,2) NOT NULL,
	EMPL_ID 	NUMBER(5) NOT NULL,
	CONSTRAINT EMPLOYE_FK FOREIGN KEY (EMPL_ID) REFERENCES EMPLOYEE(EMPL_ID),
	PRIMARY KEY(EMPL_ID)
);
--DESC WAGE



CREATE TABLE INTERN(
	HOURS      NUMBER(3),
	EMPL_ID    NUMBER(5) NOT NULL,
	CONSTRAINT EMPLOY_FK FOREIGN KEY (EMPL_ID) REFERENCES EMPLOYEE(EMPL_ID),
	PRIMARY KEY(EMPL_ID)
);
--DESC INTERN



CREATE TABLE SUPERVISES(
	SUPERVISOR_ID NUMBER(5) NOT NULL,
	SUPERVISEE_ID NUMBER(5) NOT NULL PRIMARY KEY,
	CONSTRAINT SUPERVISEE_FK FOREIGN KEY (SUPERVISEE_ID) REFERENCES EMPLOYEE(EMPL_ID),
	CONSTRAINT SUPERVISOR_FK FOREIGN KEY (SUPERVISOR_ID) REFERENCES EMPLOYEE(EMPL_ID)
);
--DESC SUPERVISES



CREATE TABLE TITLE(
	TNAME VARCHAR2(50) NOT NULL PRIMARY KEY,
	DESCRIPTION VARCHAR2(500)
);
--DESC TITLE



CREATE TABLE HAS_TITLE(
	EMPL_ID NUMBER(5) NOT NULL PRIMARY KEY,
	TNAME VARCHAR2(50) NOT NULL,
	START_DATE DATE DEFAULT(sysdate),
	END_DATE DATE,
	CONSTRAINT TNAME_FK FOREIGN KEY (TNAME) REFERENCES TITLE(TNAME),
	CONSTRAINT EMPLO_FK FOREIGN KEY (EMPL_ID) REFERENCES EMPLOYEE(EMPL_ID)
);
--DESC HAS_TITLE



CREATE TABLE PROJECT(
	PNUMBER NUMBER(5) NOT NULL PRIMARY KEY,
	PNAME VARCHAR2(50) NOT NULL,
	DESCRIPTION VARCHAR2(500),
	MANAGER_ID NUMBER(5) NOT NULL,
	CONSTRAINT MANAGER_FK FOREIGN KEY (MANAGER_ID) REFERENCES EMPLOYEE(EMPL_ID)
);
--DESC PROJECT



CREATE TABLE DEPARTMENT(
	DNUMBER NUMBER(5) NOT NULL PRIMARY KEY,
	DNAME VARCHAR2(50) NOT NULL,
	DATE_CREATED DATE DEFAULT(sysdate),
	PHONE VARCHAR2(20),
	MANAGER_ID NUMBER(5),
	CONSTRAINT MANAGE_FK FOREIGN KEY (MANAGER_ID) REFERENCES EMPLOYEE(EMPL_ID)
);
--DESC DEPARTMENT



CREATE TABLE PROJECT_OF_DEPT(
	PNUMBER NUMBER(5) NOT NULL PRIMARY KEY,
	DNUMBER NUMBER(5) NOT NULL,
	START_DATE DATE DEFAULT(sysdate),
	END_DATE DATE,
	CONSTRAINT PROJECT_FK FOREIGN KEY (PNUMBER) REFERENCES PROJECT(PNUMBER),
	CONSTRAINT DEPT_FK FOREIGN KEY (DNUMBER) REFERENCES DEPARTMENT(DNUMBER)
);
--DESC PROJECT_OF_DEPT



CREATE TABLE EMPL_WORKS_ON_PROJ(
	PNUMBER NUMBER(5) NOT NULL,
	EMPL_ID NUMBER(5) NOT NULL,
	START_DATE DATE DEFAULT(sysdate),
	END_DATE DATE,
	CONSTRAINT PROJEC_FK FOREIGN KEY (PNUMBER) REFERENCES PROJECT(PNUMBER),
	CONSTRAINT EMPL_FK FOREIGN KEY (EMPL_ID) REFERENCES EMPLOYEE(EMPL_ID)
);
--DESC EMPL_WORKS_ON_PROJECT



CREATE TABLE HAS_BENEFITS(
    EMPL_ID NUMBER(5),
    BENEFIT_ID NUMBER(5) NOT NULL PRIMARY KEY,
    CONSTRAINT BEMPL_FK FOREIGN KEY(EMPL_ID) REFERENCES EMPLOYEE(EMPL_ID)
);
--DESC HAS_BENEFITS



CREATE TABLE HAS_DAYS_OFF(
    EMPL_ID NUMBER(5),
    DAYS_OFF_ID NUMBER(5) NOT NULL PRIMARY KEY,
    CONSTRAINT DEMPL_FK FOREIGN KEY(EMPL_ID) REFERENCES EMPLOYEE(EMPL_ID)
);
--DESC HAS_DAYS_OFF


CREATE TABLE BENEFITS(
    BENEFIT_ID NUMBER(5) NOT NULL,
    THE_DATE DATE NOT NULL,
    AMOUNT DECIMAL(10,2) NOT NULL,
    TYPE VARCHAR2(50) NOT NULL,
    PRIMARY KEY (BENEFIT_ID, THE_DATE),
    CONSTRAINT BENEFIT_FK FOREIGN KEY(BENEFIT_ID) REFERENCES HAS_BENEFITS(BENEFIT_ID)
);
--DESC BENEFITS



CREATE TABLE DAYS_OFF(
    DAYS_OFF_ID NUMBER(5) NOT NULL,
    THE_DATE DATE NOT NULL,
    AMOUNT DECIMAL(10,2) NOT NULL,
    REASON VARCHAR2(100) NOT NULL,
    TYPE VARCHAR2(50) NOT NULL,
    PRIMARY KEY (DAYS_OFF_ID, THE_DATE),
    CONSTRAINT DAYS_FK FOREIGN KEY(DAYS_OFF_ID) REFERENCES HAS_DAYS_OFF(DAYS_OFF_ID)
);
--DESC DAYS_OFF
